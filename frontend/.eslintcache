[{"/frontend/src/index.tsx":"1","/frontend/src/components/SponsorTeam.tsx":"2","/frontend/src/components/RegisterTeam.tsx":"3","/frontend/src/reportWebVitals.ts":"4","/frontend/src/services/HttpService.tsx":"5"},{"size":543,"mtime":1606339049000,"results":"6","hashOfConfig":"7"},{"size":3162,"mtime":1606407443000,"results":"8","hashOfConfig":"7"},{"size":2120,"mtime":1606405567000,"results":"9","hashOfConfig":"7"},{"size":425,"mtime":1606337940000,"results":"10","hashOfConfig":"7"},{"size":1083,"mtime":1606341974000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14e66yt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/frontend/src/index.tsx",[],"/frontend/src/components/SponsorTeam.tsx",["23"],"/frontend/src/components/RegisterTeam.tsx",["24"],"import * as React from \"react\";\nimport \"./RegisterTeam.css\";\nimport { useForm } from \"react-hook-form\";\nimport { HttpService } from \"../services/HttpService\";\nimport { AxiosResponse } from \"axios\";\nimport { useState } from \"react\";\n\nexport const RegisterTeam: React.FC = () => {\n  const service = HttpService;\n  const { register, handleSubmit, errors } = useForm();\n  const [success, setSuccess] = useState<boolean>(false);\n  const registerTeam = (data: Record<string, string>) =>\n    service.post(\"/api/v1/league\", data).then((response: AxiosResponse) => {\n      console.log(data);\n      if (response.status === 200) {\n        setSuccess(true);\n        let form: any = document.getElementById(\"register-form\");\n        if (form) form.reset();\n      } else {\n        // TODO: error handling\n        // console.log(response.message)\n      }\n    });\n  return (\n    <div>\n      <h1>Register Team</h1>\n      {success && <p className=\"alert-success\">Successfully registered team</p>}\n      <form id=\"register-form\" onSubmit={handleSubmit(registerTeam)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <br />\n          <input ref={register({ required: true })} className=\"name\" name=\"name\" type=\"text\"></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"latitude\">Latitude</label>\n          <br />\n          <input ref={register({ required: true })} className=\"latitude\" name=\"latitude\" type=\"text\"></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"longitude\">Longitude</label>\n          <br />\n          <input ref={register({ required: true })} className=\"longitude\" name=\"longitude\" type=\"text\"></input>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"price\">Sponsor Price</label>\n          <br />\n          <input ref={register({ required: true })} className=\"price\" name=\"price\" type=\"text\"></input>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterTeam;\n","/frontend/src/reportWebVitals.ts",[],"/frontend/src/services/HttpService.tsx",[],{"ruleId":"25","severity":1,"message":"26","line":13,"column":35,"nodeType":"27","messageId":"28","endLine":13,"endColumn":41},{"ruleId":"25","severity":1,"message":"26","line":10,"column":35,"nodeType":"27","messageId":"28","endLine":10,"endColumn":41},"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar"]